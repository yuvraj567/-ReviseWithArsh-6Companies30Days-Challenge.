class Solution {
public:
    int maxNumberOfFamilies(int n, std::vector<std::vector<int>>& reservedSeats) {
        int res = n * 2;
        int j = 0;

        sort(reservedSeats.begin(), reservedSeats.end());

        while (j < reservedSeats.size()) {
            int cur_row = reservedSeats[j][0];
            bool isle1 = false, isle2left = false, isle2right = false, isle3 = false;

            while (j < reservedSeats.size() && reservedSeats[j][0] == cur_row) {
                int seat = reservedSeats[j][1];
                if (seat == 2 || seat == 3) isle1 = true;
                else if (seat == 4 || seat == 5) isle2left = true;
                else if (seat == 6 || seat == 7) isle2right = true;
                else if (seat == 8 || seat == 9) isle3 = true;
                j++;
            }

            if ((isle1 && isle2right) || (isle3 && isle2left) || (isle2left && isle2right)) {
                res -= 2;
            } else if (isle1 || isle2left || isle2right || isle3) {
                res -= 1;
            }
        }
        return res;
    }
};
